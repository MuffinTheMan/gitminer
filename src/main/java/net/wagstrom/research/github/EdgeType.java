package net.wagstrom.research.github;

import com.ibm.research.govsci.graph.StringableEnum;

public enum EdgeType implements StringableEnum {
    // FIXME: refactor in the existing database and rename edge type
    CHANGED("CHANGED"), // used by RepositoryLoader
    COMMITAUTHOR("AUTHOR"), // COMMIT->USER also used by RepositoryLoader
    COMMITPARENT("COMMIT_PARENT"), // also used by RepositoryLoader
    COMMITTER("COMMITTER"), // COMMIT->USER also used by RepositoryLoader
    CREATOR("CREATOR"),
    DISCUSSIONCOMMIT("DISCUSSION_COMMIT"),
    DISCUSSIONUSER("DISCUSSION_USER"),
    EMAIL("EMAIL"), // USER->EMAIL also used by RepositoryLoader
    EVENTCOMMENT("EVENT_COMMIT"),
    EVENTCOMMIT("EVENT_COMMIT"),
    FOLLOWER("FOLLOWER"),
    FOLLOWING("FOLLOWING"),
    GISTCOMMENT("GIST_COMMENT"),
    GISTCOMMENTOWNER("GIST_COMMENT_OWNER"),
    GISTFILE("GIST_FILE"),
    GISTOWNER("GIST_OWNER"),
    ISSUE("ISSUE"),
    ISSUEALTEVENT("ISSUE_ALT_EVENT"),
    ISSUEASSIGNEE("ISSUE_ASSIGNEE"),
    ISSUELABEL("ISSUE_LABEL"),
    ISSUEOWNER("ISSUE_OWNER"),
    ISSUECOMMENT("ISSUE_COMMENT"),
    ISSUECOMMENTOWNER("ISSUE_COMMENT_OWNER"),
    ISSUEEVENT("ISSUE_EVENT"),
    ISSUEEVENTACTOR("ISSUE_EVENT_ACTOR"),
    MILESTONE("MILESTONE"),
    NAME("NAME"), // used by RepositoryLoader
    ORGANIZATIONOWNER("ORGANIZATION_OWNER"),
    ORGANIZATIONMEMBER("ORGANIZATION_MEMBER"),
    ORGANIZATIONTEAM("ORGANIZATION_TEAM"),
    PULLREQUEST("PULLREQUEST"),
    PULLREQUESTBASE("PULLREQUEST_BASE"),
    PULLREQUESTDISCUSSION("PULLREQUEST_DISCUSSION"),
    PULLREQUESTLABEL("PULLREQUEST_LABEL"),
    PULLREQUESTOWNER("PULLREQUEST_OWNER"),
    PULLREQUESTHEAD("PULLREQUEST_HEAD"),
    PULLREQUESTISSUEUSER("PULLREQUEST_ISSUE_USER"),
    PULLREQUESTISSUECOMMENT("PULLREQUEST_ISSUE_COMMENT"),
    PULLREQUESTMARKERUSER("PULLREQUEST_MARKER_USER"),
    PULLREQUESTMERGEDBY("PULLREQUEST_MERGED_BY"),
    PULLREQUESTCOMMIT("PULLREQUEST_COMMIT"),
    PULLREQUESTREVIEWCOMMENT("PULLREQUEST_REVIEW_COMMENT"),
    PULLREQUESTREVIEWCOMMENTOWNER("PULLREQUEST_REVIEW_COMMENT_OWNER"),
    PULLREQUESTREVIEWCOMMENTCOMMIT("PULLREQUEST_REVIEW_COMMENT_COMMIT"),
    PULLREQUESTREVIEWCOMMENTORIGINALCOMMIT("PULLREQUEST_REVIEW_COMMENT_ORIGINAL_COMMIT"),
    PULLREQUESTCOMMENTOWNER("PULLREQUEST_COMMENT_OWNER"),
    REPOSITORY("REPOSITORY"), // used by RepositoryLoader
    REPOWATCHED("REPO_WATCHED"),
    REPOOWNER("REPO_OWNER"),
    REPOPARENT("REPO_PARENT"),
    REPOCOLLABORATOR("REPO_COLLABORATOR"),
    REPOCONTRIBUTOR("REPO_CONTRIBUTOR"),
    REPOFORK("REPO_FORK"),
    REPOSOURCE("REPO_SOURCE"),
    TEAMMEMBER("TEAM_MEMBER");

    private String text;

    EdgeType(String text) {
        this.text = text;
    }

    public String toString() {
        return this.text;
    }

    public static EdgeType fromString(String text) {
        if (text != null) {
            for (EdgeType d : EdgeType.values()) {
                if (text.equals(d.text)) { return d; }
            }
        }
        throw new IllegalArgumentException("EdgeType: '" + text + "' not valid");
    }
}
